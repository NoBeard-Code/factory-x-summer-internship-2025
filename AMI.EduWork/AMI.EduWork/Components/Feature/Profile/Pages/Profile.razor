@page "/profile"
@using AMI.EduWork.Components.Feature.Profile.Components
@using AMI.EduWork.Components.Feature.Profile.Components.ProjectComponent
@using AMI.EduWork.Components.Feature.Profile.Components.VacationComponent
@using AMI.EduWork.Domain.Interfaces.Service
@using AMI.EduWork.Domain.Models.TimeSlice
@using AMI.EduWork.Domain.Models.UserOnProject
@using AMI.EduWork.Domain.Models.VacationModel
@using AMI.EduWork.Domain.Services
@inject AuthenticationStateProvider AuthStateProvider
@inject IAnnualVacationService iannualVacationService
@inject IProjectService ProjectService
@inject IUserOnProjectService UserOnProjectService
@inject ITimeSliceService TimeSliceService
<h3>Profile</h3>

<MudGrid>
    <MudItem xs="6">
        <MudPaper Class="d-flex flex-column align-center justify-space-around mud-height-full mud-width-full py-8">
            <h4>Projects</h4>
            @if (timeSlices is not null && userOnProjects is not null)
            {
                <ProjectChartComponent UserId="@userId" />
            }
        </MudPaper>
    </MudItem>  

    <MudItem xs="6">
        <MudPaper Class="d-flex flex-column align-center justify-space-around mud-height-full mud-width-full py-8">
            <h4>Annual Vacation</h4>
            @if (_annualVacationGetModels is not null)
            {
                <VacationChartComponent annualVacationGetModel="_annualVacationGetModels" />
            }
        </MudPaper>
    </MudItem>        

    <MudFlexBreak />
    <MudItem xs="6">
        <MudPaper Class="d-flex flex-column align-center justify-center mud-height-full mud-width-full py-8">
            <h4>User statistics</h4>
            <MudIcon Icon="@Icons.Material.Filled.AccessTimeFilled" Style="font-size: 4rem;" />
            <MudIcon Icon="@Icons.Material.Filled.Accessibility" Style="font-size: 4rem;" />
            <MudIcon Icon="@Icons.Material.Filled.AssignmentReturned" Style="font-size: 4rem;" />
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex flex-column align-center justify-center mud-height-full mud-width-full py-8">
            <h4>Sick leave</h4>
            <MudIcon Icon="@Icons.Material.Filled.Attachment" Style="font-size: 4rem;" />
            <MudIcon Icon="@Icons.Material.Filled.AssignmentInd" Style="font-size: 4rem;" />
            <MudIcon Icon="@Icons.Material.Filled.Badge" Style="font-size: 4rem;" />
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    public IEnumerable<AnnualVacationGetModel>? _annualVacationGetModels { get; set; }
    public IEnumerable<GetUserOnProjectModel> userOnProjects { get; set; } = Enumerable.Empty<GetUserOnProjectModel>();
    public IEnumerable<GetTimeSliceModel> timeSlices { get; set; } = Enumerable.Empty<GetTimeSliceModel>();
    private bool isLoading = true;
    private string? userId;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            userId = user.FindFirst("sub")?.Value
                  ?? user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        }

        if (!string.IsNullOrEmpty(userId))
        {
            _annualVacationGetModels = await iannualVacationService.GetByUserYear(DateTime.Now.Year, userId);
            userOnProjects = await UserOnProjectService.GetProjectsByUserId(userId);
            timeSlices = await TimeSliceService.GetAllUserTimeSlices(userId);
        }
        isLoading = false;
        StateHasChanged();

    }

}
