@page "/contracts/add"
@using AMI.EduWork.Domain.Interfaces.Service
@using AMI.EduWork.Domain.Models.ContractModel
@using AMI.EduWork.Domain.Models.User
@rendermode InteractiveServer
@inject IContractService icontractService
@inject IUserService iuserService
@inject NavigationManager Navigation

<h3>Add New Contract</h3>

<div class="col-md-4">
    <EditForm method="post" Model="contractCreateModel" OnValidSubmit="CreateContract" FormName="Create" Enhance>
        <div class="mb-3">
            <labe1 for="WorkingHour" class="form-label">Working hour</labe1>
            <InputNumber id="WorkingHour" @bind-Value="contractCreateModel.WorkingHour" class="form-control"/>
        </div>
        <div class="mb-3">
            <labe1 for="HourlyRate" class="form-label">Hourly rate</labe1>
            <InputNumber id="HourlyRate" @bind-Value="contractCreateModel.HourlyRate" class="form-control" />
        </div>
        <div class="mb-3">
            <labe1 for="IsActive" class="form-label">Is active</labe1>
            <InputCheckbox id="IsActive" @bind-Value="contractCreateModel.IsActive" />
        </div>
        <div class="mb-3">
            <label for="user">Select user:</label>
            <select id="user" class="form-select" @bind="contractCreateModel.UserId">
            <option value="">-- Choose --</option>
                @foreach (var user in getUserModel)
                {
                    <option id="@user.Id" value="@user.Id">@user.UserName</option>
                }
            </select>
        </div>
    
        <button class="btn btn-primary" type="submit">Create</button>
        <button class="btn btn-secondary" type="button" @onclick="Cancel">Cancel</button>

    </EditForm>
</div>


@code {
    [SupplyParameterFromForm]
    private ContractCreateModel contractCreateModel { get; set; } = new();
    private List<GetUserModel> getUserModel { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        IEnumerable<GetUserModel> _getUserModel = await iuserService.GetAll();
        getUserModel = _getUserModel.ToList();
    }

    private async Task CreateContract()
    {
        await icontractService.Create(contractCreateModel);
        Navigation.NavigateTo("/contracts");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/contracts");
    }
}
