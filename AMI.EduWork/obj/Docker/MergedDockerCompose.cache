name: dockercompose12815584194551566825
services:
  ami.eduwork:
    build:
      context: C:\FactoryXproject\factory-x-summer-internship-2025\AMI.EduWork
      dockerfile: AMI.EduWork/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Containers
      ASPNETCORE_HTTP_PORTS: "8080"
    image: amieduwork
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Adrian\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Adrian\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Adrian\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Adrian\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Str0ng_P@ssword2025!
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserver-data
        target: /var/opt/mssql
        volume: {}
networks:
  default:
    name: dockercompose12815584194551566825_default
volumes:
  sqlserver-data:
    name: dockercompose12815584194551566825_sqlserver-data